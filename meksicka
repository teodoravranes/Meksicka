#include <iostream>
#include <cstdlib>
#include <time.h>

using namespace std;

enum VrstaMesa {SVINJETINA, JUNETINA, PILETINA, BEZ_MESA};

class Meso 
{
private:
int gramaza;
VrstaMesa vrsta_Mesa;

public:
Meso() {gramaza=0; vrsta_mesa=BEZ_MESA;}
Meso(const Meso &meso) {gramaza=meso.gramaza; vrsta_mesa=meso.vrsta_mesa;}

bool setGramaza(int g) 
{
if(g<0 || g>1000)
{
return false;
}else{
gramaza=g;
return true;
}
void setVrstaMesa(VrstaMesa vm) {vrsta_mesa=vm;}

int getGramaza()const {return gramaza;}

string getVrstaMesa()const
{
if(vrsta_mesa==SVINJETINA)
return "SVINJETINA";
else if(vrsta_mesa==JUNETINA)
return "JUNETINA";
else if(vrsta_mesa==PILETINA)
return "PILETINA";
else
return "BEZ MESA";
}

};

void ispisiMeso(const Meso m)
{
cout<<"Gramaza: " << get.gramaza()<<endl
cout<<"Vrsta mesa: "<< getVrstaMesa()<<endl;
}

enum vrstaPriloga {RIZA, POMFRIT, PASULJ, TESTENINA, BEZ_PRILOGA};

class Prilog
{
private:
vrstaPriloga prilog;

public:
Prilog() {prilog=BEZ_PRILOGA;}
Prilogu(const Prilog &p) {prilog=p.priloga;}

void setPrilog(vrstaPriloga pp) {prilog=pp;}

string getPrilog()const 
{
if(prilog==RIZA)
return "RIZA";
else if(prilog==POMFRIT)
return "POMFRIT";
else if(prilog==PASULJ)
return "PASULJ";
else if(prilog==TESTENINA)
return "TESTENINA";
else
return "BEZ PRILOGA";
}

};

void ispisiPrilog(const Prilog pr)
{
cout<<"Vrsta priloga:" <<pr.getPrilog()<<endl;
}

enum stanjeObroka {POCETAK_ODABIRA, ODABRANO_MESO, ODABRAN_PRILOG, SPREMAN, ZAGOREO};

class Obrok 
{
private:
Meso m;
Prilog p;
stanjeObroka s;

public:
Obrok() : m(), p() {stanje=POCETAK_ODABIRA;}
Obrok(const Obrok &o) :m(o.m), p(o.p){stanje=o.stanje;}

Meso getMeso()const {return m;}
Prilog getPrilog()const {return p;}

string getStanje()const
{
if(stanje == POCETAK_ODABIRA)
return "Birajte obrok";
else if(stanje == ODABRANO_MESO)
return "Odabrali ste meso";
else if(stanje == ODABRAN_PRILOG)
return "Odabrali ste prilog";
else if(stanje == ZAGOREO)
return "Obrok je zagoreo";
else
return "Obrok je spreman";
}

stanjeObroka getStanjeObroka() {return s;}
   
bool odaberiMeso(meso m1, int gram){
if(gram>=1 && gram<=1000 && stanje == POCETAK_ODABIRA)
{
m.setVrstaMesa(m1);
m.setGramaza(gram);
stanje = odabranoMeso;
return true;
}else
return false;
}

bool odaberiPrilog(prilog pr){
if(stanje == ODABRANO_MESO){
stanje = ODABRAN_PRILOG;
p.setPrilog(pr);
return true;
}else
{
return false;
}
}

bool spremiObrok(){
if(stanje == ODABRAN_PRILOG){
int sansaDaZagori = rand()%10+1;
if(sansaDaZagori == 1){
stanje = ZAGOREO;
}
else
{
stanje = SPREMAN;
}
return true;
}else{
return false;
}
}

};

void ispisiObrok(const Obrok& o)
{
cout<<"----------------------"<<endl;
ispisMesa(o.getMeso());
ispisiPrilog(o.getPrilog());
cout<<o.getStanje()<<endl;
cout<<"----------------------"<<endl;
}

int meni()
{
int op;
cout<<"1. Izbor mesa"<<endl;
cout<<"2. Izbor priloga"<<endl;
cout<<"3. Spremite porudzbinu"<<endl;
cin>>opcija;
return opcija;
}

int main()
{
Obrok o;
srand(time(NULL));

int op; 
int mesoo;
int gramazaa;
int prilogg;

bool b;

do
{
op = meni();

switch(op)
{

case 1:
cout<<"Biranje gramaze i vrste mesa: "<<endl;
cout<<"1. Svinjetina\n2. Junetina\n3. Piletina\n4. Bez mesa\n"<<endl;
cin>>odaberiMeso>>gramazaMesa;

if(odaberiMeso == 1)
b= O.odaberiMeso(SVINJETINA,gramazaMesa);
else if(odaberiMeso == 2)
b = O.odaberiMeso(JUNETINA,gramazaMesa);
else if(odaberiMeso == 3)
b = O.odaberiMeso(PILETINA,gramazaMesa);
else
b = O.odaberiMeso(BEZ_MESA,gramazaMesa);

break;

case 2:
cout<<"Biranje priloga: "<<endl;
cout<<"1. Riza\n2.Pomfrit\n3. Pasulj\n4. Testenina\nBez priloga\n"<<endl;
cin>>prilogg;

if(prilogg == 1)
b = O.odaberiPrilog(RIZA);
else if(prilogg == 2)
b = O.odaberiPrilog(POMFRIT);
else if(prilogg ==3 )
b = O.odaberiPrilog(PASULJ);
else if(prilogg == 4)        
b = O.odaberiPrilog(TESTENINA);     
else
b = O.odaberiPrilog(BEZ_PRILOGA);

break;

case 3:
b = O.spremiObrok();
break;

}

if(op>3 || op<1)
cout<<"Izabrali ste nepostojecu opciju!"<<endl;
else if(b == true)
ispisiObrok(O);

}while(O.getStanjeObroka()!= ZAGOREO && O.getStanjeObroka()!= SPREMAN);

return 0;
}
